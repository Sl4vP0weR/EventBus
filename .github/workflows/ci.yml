name: ci

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-quality: 'preview'
          dotnet-version: |
            6.0.x
            8.0.x
            9.0.x

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release

      - name: Run Tests
        run: dotnet test --no-build -c Release

      - name: Pack
        run: dotnet pack --no-build -c Release -p:VersionMetadata=+${{ github.sha }} --output ./packages

      - name: Upload packages artifact
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: packages/

  compare_packages:
    runs-on: debian-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-quality: 'preview'
          dotnet-version: |
            9.0.x
            
      - name: Install Mono
        run: sudo apt-get update && sudo apt-get install -y mono-complete
  
      - name: Setup NuGet
        uses: nuget/setup-nuget@v2
  
      - name: Install apicompat
        run: dotnet tool install --global Microsoft.DotNet.ApiCompat.Tool
        
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: packages/
  
      - name: Download Latest NuGet Package for compatibility check
        run: |
          for file in ./packages/*.nupkg; do
            package_id=$(basename "$package" | cut -d. -f1)
            nuget install $package_id -Source https://api.nuget.org/v3/index.json -OutputDirectory ./compatibility
            if [ $? -ne 0 ]; then
              cp "$package" compatibility/
            fi
          done
          exit 0
      
      - name: API Compatibility Check
        run: |
          cd compatibility
          chmod +x check_compatibility.sh
          ./check_compatibility.sh

  publish:
    runs-on: ubuntu-latest
    needs: compare_packages
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Setup NuGet
        uses: nuget/setup-nuget@v2
        with: 
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: packages/

      - name: Publish to NuGet
        run: |
          for package in ./packages/*.nupkg; do
            dotnet nuget push "$package" --source https://api.nuget.org/v3/index.json --skip-duplicate
          done
